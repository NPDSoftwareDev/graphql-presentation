scalar DateTime

type Query {
    customer(id: ID): Customer
    product(id: ID): Product
    order(id: ID): Order
}

type Mutation {
  createOrder(date: DateTime!, productIds:[Int], serviceIds:[Int], customerId:Int): Order
}

type Customer {
  id: ID!
  name: String!
  contactLanguage: String
  orders: [Order]
}

type Order {
  id: ID!
  date: DateTime!
  invoiceAmount: Float
  invoiceDocument: Document
  products: [Product]
  services: [Service]
  customer: Customer
}

type Product {
  id: ID!
  name: String!
  document: Document
  images: [ProductImage]
  orders: [Order]  
}

type Service {
  id: ID! 
  name: String!
}

type ProductImage {
  product: Product
  imageUrl: String
}

type Document {
  documentType: String
  documentUrl: String
}

"""
"""
A Customer is a Entity that we sell products to. 

Customers are awesome because they pay us money
"""
type Customer {
  """
  ID is generate by the database
  """
  id: ID!

  """
  Customer Name is pulled from CRM
  """
  name: String!

  """
  Contact Language is the main language that customer 
  speaks. However, most customers also accept communication 
  in English.
  """
  contactLanguage: String

  """
  A List of orders belonging to a customer. 
  """
  orders: [Order]
}
"""
